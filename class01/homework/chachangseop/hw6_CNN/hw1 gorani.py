import cv2
import numpy as np
img = cv2.imread('strawberry.jpg', cv2.IMREAD_GRAYSCALE)
kernel = np.array([[1, 1, 1],[1, -8, 1], [1, 1, 1]])
Identity = np.array([[0, 0, 0],[0, 1, 0], [0, 0, 0]])
Ridge = np.array([[0, -1, 0],[-1, 4, -1], [0, -1, 0]])
edge_detection = np.array([[-1, -1, -1],[ -1, 8, -1], [-1, -1, -1]])
Sharpen = np.array([[0, -1, 0],[-1, 5, -1], [0, -1, 0]])
Box_blur = np.array([[1/9, 1/9, 1/9],[1/9, 1/9, 1/9], [1/9, 1/9, 1/9]])
Gaussianblur33 = np.array([[1, 2, 1],[2, 4, 2], [1, 2, 1]])/16
Gaussianblur55 = np.array([[1, 4, 6, 4, 1],
                           [4, 16, 24, 16, 4], 
                           [6, 24, 36, 24, 6],
                           [4, 16, 24, 16, 4],
                           [1, 4, 6, 4, 1]])/256
UnsharpMasking55 = np.array([[1, 4, 6, 4, 1],
                           [4, 16, 24, 16, 4], 
                           [6, 24, -476, 24, 6],
                           [4, 16, 24, 16, 4],
                           [1, 4, 6, 4, 1]])-1/256
print(kernel)
output1 = cv2.filter2D(img, -1, kernel)
cv2.imshow('kernel', output1)
cv2.waitKey(0)
print(Identity)
output2 = cv2.filter2D(img, -1, Identity)
cv2.imshow('Identity', output2)
cv2.waitKey(0)
print(Ridge)
output3= cv2.filter2D(img, -1, Ridge)
cv2.imshow('Ridge', output3)
cv2.waitKey(0)
print(edge_detection)
output4 = cv2.filter2D(img, -1, edge_detection)
cv2.imshow('edge_detection', output4)
cv2.waitKey(0)
print(Sharpen)
output5 = cv2.filter2D(img, -1, Sharpen)
cv2.imshow('Sharpen', output5)
cv2.waitKey(0)
print(Box_blur)
output6 = cv2.filter2D(img, -1, Box_blur)
cv2.imshow('Box_blur', output6)
cv2.waitKey(0)
print(Gaussianblur33)
output7 = cv2.filter2D(img, -1, Gaussianblur33)
cv2.imshow('Gaussianblur33', output7)
cv2.waitKey(0)
print(Gaussianblur55)
output8 = cv2.filter2D(img, -1, Gaussianblur55)
cv2.imshow('Gaussianblur55', output8)
cv2.waitKey(0)
print(UnsharpMasking55)
output9 = cv2.filter2D(img, -1, UnsharpMasking55)
cv2.imshow('UnsharpMasking55', output9)
cv2.waitKey(0)
# cv2.imshow('kernel', output1)
# cv2.waitKey(1)
# cv2.imshow('Identity', output2)
# cv2.waitKey(1)
# cv2.imshow('Ridge', output3)
# cv2.waitKey(1)
# cv2.imshow('edge_detection', output4)
# cv2.waitKey(1)
# cv2.imshow('Sharpen', output5)
# cv2.waitKey(1)
# cv2.imshow('Box_blur', output6)
# cv2.waitKey(1)
# cv2.imshow('Gaussianblur33', output7)
# cv2.waitKey(1)
# cv2.imshow('Gaussianblur55', output8)
# cv2.waitKey(1)
# cv2.imshow('UnsharpMasking55', output9)
# cv2.waitKey(1)
# cv2.imshow('edge', output1,output2,output3,output4,output5,output6,output7,output8,output9)
# cv2.waitKey(1)